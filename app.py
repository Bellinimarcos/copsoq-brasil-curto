import streamlit as st
import gspread
from datetime import datetime
import calculadora_copsoq_br as motor # Importa o motor de c√°lculo da vers√£o BR

# --- CONFIGURA√á√ÉO INICIAL ---
st.set_page_config(page_title="COPSOQ II ‚Äì Diagn√≥stico Psicossocial", layout="wide")

# --- FUN√á√ïES DE APOIO (CONEX√ÉO COM GOOGLE SHEETS) ---
NOME_DA_PLANILHA = 'Resultados_COPSOQ_II_BR_Validado'

def salvar_dados(dados_para_salvar):
    """Salva os dados na Planilha Google de forma segura e com tratamento de erro expl√≠cito."""
    try:
        creds = dict(st.secrets["gcp_service_account"])
        creds["private_key"] = creds["private_key"].replace("\\n", "\n")
        gc = gspread.service_account_from_dict(creds)
        spreadsheet = gc.open(NOME_DA_PLANILHA)
        worksheet = spreadsheet.sheet1
        
        if not worksheet.get_all_values():
            cabecalho = ["Timestamp"] + list(dados_para_salvar.keys())
            worksheet.update('A1', [cabecalho])
            
        nova_linha = [datetime.now().strftime("%Y-%m-%d %H:%M:%S")] + [str(v) if v is not None else "" for v in dados_para_salvar.values()]
        
        response = worksheet.append_row(nova_linha)
        
        if isinstance(response, dict) and "updates" in response:
             return True
        else:
             raise TypeError(f"A resposta da API do Google n√£o foi a esperada. Resposta recebida: {response}")

    except gspread.exceptions.SpreadsheetNotFound:
        st.error(f"Erro Cr√≠tico: A planilha '{NOME_DA_PLANILHA}' n√£o foi encontrada. Verifique o nome e as permiss√µes de partilha.")
        return False
    except Exception as e:
        st.error(f"Ocorreu um erro inesperado ao salvar na planilha: {e}")
        st.error(f"Tipo do Erro: {type(e)}")
        return False

# --- ESTRUTURA DE DADOS DO QUESTION√ÅRIO (VALIDADA) ---
escala = {1: "Nunca", 2: "Raramente", 3: "√Äs vezes", 4: "Frequentemente", 5: "Sempre"}
opcoes_escala = list(escala.values())

dimensoes_agrupadas = {
    "üß† Exig√™ncias no Trabalho": {
        "Ritmo de Trabalho": {"Q1": "Voc√™ tem que trabalhar muito r√°pido?", "Q2": "O seu trabalho exige que voc√™ trabalhe em um ritmo acelerado?"},
        "Exig√™ncias Cognitivas": {"Q3": "O seu trabalho exige que voc√™ memorize muitas coisas?", "Q4": "O seu trabalho exige que voc√™ tome decis√µes dif√≠ceis?"},
        "Exig√™ncias Emocionais": {"Q5": "O seu trabalho te coloca em situa√ß√µes emocionalmente dif√≠ceis?", "Q6": "Voc√™ precisa lidar com os problemas pessoais de outras pessoas no seu trabalho?"}
    },
    "üõ†Ô∏è Organiza√ß√£o e Conte√∫do do Trabalho": {
        "Influ√™ncia": {"Q7": "Voc√™ tem influ√™ncia sobre as coisas que afetam o seu trabalho?", "Q8": "Voc√™ tem influ√™ncia sobre o seu ritmo de trabalho?"},
        "Possibilidades de Desenvolvimento": {"Q9": "O seu trabalho te d√° a possibilidade de aprender coisas novas?", "Q10": "O seu trabalho te d√° a oportunidade de desenvolver as suas compet√™ncias?"},
        "Sentido do Trabalho": {"Q11": "O seu trabalho √© significativo para voc√™?", "Q12": "Voc√™ sente que o trabalho que voc√™ faz √© importante?"},
        "Comprometimento com o Local de Trabalho": {"Q13": "Voc√™ gosta de falar sobre o seu trabalho com outras pessoas?", "Q14": "Voc√™ se sente orgulhoso(a) de trabalhar nesta organiza√ß√£o?"}
    },
    "üë• Rela√ß√µes Sociais e Lideran√ßa": {
        "Previsibilidade": {"Q15": "Voc√™ recebe com anteced√™ncia as informa√ß√µes sobre decis√µes importantes?", "Q16": "Voc√™ recebe todas as informa√ß√µes necess√°rias para fazer bem o seu trabalho?"},
        "Clareza de Papel": {"Q17": "Voc√™ sabe exatamente o que se espera de voc√™ no trabalho?"},
        "Conflito de Papel": {"Q18": "Voc√™ recebe tarefas com exig√™ncias contradit√≥rias?"},
        "Qualidade da Lideran√ßa": {"Q19": "O seu chefe imediato √© bom em planejar o trabalho?", "Q20": "O seu chefe imediato √© bom em resolver conflitos?"},
        "Apoio Social do Superior": {"Q21": "Voc√™ consegue ajuda e apoio do seu chefe imediato, se necess√°rio?"},
        "Apoio Social dos Colegas": {"Q22": "Voc√™ consegue ajuda e apoio dos seus colegas, se necess√°rio?"},
        "Sentido de Comunidade": {"Q23": "Existe um bom ambiente de trabalho entre voc√™ e seus colegas?"}
    },
    "üè¢ Interface Trabalho-Indiv√≠duo e Sa√∫de": {
        "Inseguran√ßa no Emprego": {"Q24": "Voc√™ est√° preocupado(a) em perder o seu emprego?"},
        "Conflito Trabalho-Fam√≠lia": {"Q25": "As exig√™ncias do seu trabalho interferem na sua vida familiar e dom√©stica?"},
        "Satisfa√ß√£o no Trabalho": {"Q26": "De um modo geral, o qu√£o satisfeito(a) voc√™ est√° com o seu trabalho?"},
        "Sa√∫de em Geral": {"Q27": "Em geral, como voc√™ diria que √© a sua sa√∫de?"},
        "Burnout": {"Q28": "Com que frequ√™ncia voc√™ se sente f√≠sica e emocionalmente esgotado(a)?"},
        "Estresse": {"Q29": "Com que frequ√™ncia voc√™ se sente tenso(a) ou estressado(a)?"},
        "Problemas de Sono": {"Q30": "Com que frequ√™ncia voc√™ dorme mal e acorda cansado(a)?"},
        "Sintomas Depressivos": {"Q31": "Com que frequ√™ncia voc√™ se sente triste ou deprimido(a)?"}
    },
    "üö´ Comportamentos Ofensivos": {
        "Ass√©dio Moral": {"Q32": "Voc√™ j√° foi submetido(a) a ass√©dio moral (bullying) no seu trabalho nos √∫ltimos 12 meses?"}
    }
}

# Cria uma lista √∫nica com todas as chaves das perguntas (ex: Q1, Q2...)
todas_as_chaves = [q_key for theme in dimensoes_agrupadas.values() for dimension in theme.values() for q_key in dimension.keys()]
total_perguntas = len(todas_as_chaves)

# --- INICIALIZA√á√ÉO DO ESTADO DA SESS√ÉO ---
# Garante que cada chave de pergunta exista no estado da sess√£o
for key in todas_as_chaves:
    if key not in st.session_state:
        st.session_state[key] = None

# --- INTERFACE PRINCIPAL ---
st.title("üß† COPSOQ II ‚Äì Vers√£o Curta (Validada para o Brasil)")

# --- INSTRU√á√ïES APRIMORADAS ---
with st.expander("Clique aqui para ver as instru√ß√µes completas", expanded=True):
    st.markdown("""
    **Prezado(a) Colaborador(a),**

    Bem-vindo(a)! A sua participa√ß√£o √© um passo fundamental para construirmos, juntos, um ambiente de trabalho mais saud√°vel.

    - **Confidencialidade:** As suas respostas s√£o **100% confidenciais e an√≥nimas**. Os resultados s√£o sempre analisados de forma agrupada.
    - **Sinceridade:** Por favor, responda com base nas suas experi√™ncias de trabalho das **√∫ltimas 4 semanas**. N√£o h√° respostas "certas" ou "erradas".
    - **Como Navegar:** A pesquisa est√° dividida em **5 se√ß√µes (abas)**, como pode ver abaixo. Por favor, navegue por todas elas para responder √†s perguntas.
    - **Finaliza√ß√£o:** O bot√£o para enviar as suas respostas s√≥ aparecer√° quando a barra de progresso atingir 100%.
    
    A sua contribui√ß√£o √© extremamente valiosa. Muito obrigado!
    """)
st.divider()

# --- BARRA DE PROGRESSO ---
perguntas_respondidas = len([key for key in todas_as_chaves if st.session_state[key] is not None])
progresso = perguntas_respondidas / total_perguntas if total_perguntas > 0 else 0
st.progress(progresso, text=f"Progresso: {perguntas_respondidas} de {total_perguntas} perguntas respondidas ({progresso:.0%})")
st.markdown("---")

# --- NAVEGA√á√ÉO POR ABAS ---
lista_de_abas = list(dimensoes_agrupadas.keys())
tabs = st.tabs(lista_de_abas)

for i, (nome_tema, dimensoes) in enumerate(dimensoes_agrupadas.items()):
    with tabs[i]:
        for titulo_dimensao, perguntas in dimensoes.items():
            st.subheader(titulo_dimensao)
            for q_key, q_text in perguntas.items():
                # O widget radio agora l√™ e escreve diretamente em st.session_state[q_key]
                st.radio(label=q_text, options=opcoes_escala, key=q_key, horizontal=True)
            st.markdown("---")

# --- L√ìGICA DE FINALIZA√á√ÉO E ENVIO ---
# A verifica√ß√£o do progresso √© feita aqui, no final do script, ap√≥s todos os widgets terem sido processados.
if progresso == 1.0:
    st.success("üéâ **Excelente! Voc√™ respondeu a todas as perguntas.**")
    if st.button("Enviar Respostas", type="primary", use_container_width=True):
        with st.spinner('Calculando e enviando...'):
            # Cria o dicion√°rio de respostas a partir do estado da sess√£o
            respostas_para_salvar = {key: st.session_state[key] for key in todas_as_chaves}
            
            resultados_dimensoes = motor.calcular_dimensoes(respostas_para_salvar)
            dados_completos = {**respostas_para_salvar, **resultados_dimensoes}
            
            if salvar_dados(dados_completos):
                # Limpa o estado da sess√£o para o pr√≥ximo utilizador
                for key in todas_as_chaves:
                    del st.session_state[key]
                st.balloons()
                st.success("‚úÖ Respostas enviadas com sucesso. Muito obrigado!")
                st.rerun()
else:
    st.warning("Por favor, navegue por todas as abas e responda √†s perguntas restantes.")

import streamlit as st
import gspread
from datetime import datetime
import calculadora_copsoq_br as motor # Importa o motor de c√°lculo da vers√£o BR

# --- CONFIGURA√á√ÉO INICIAL ---
st.set_page_config(page_title="COPSOQ II ‚Äì Diagn√≥stico Psicossocial", layout="wide")

# --- FUN√á√ïES DE APOIO (CONEX√ÉO COM GOOGLE SHEETS) ---
NOME_DA_PLANILHA = 'Resultados_COPSOQ_II_BR_Validado'

def salvar_dados(dados_para_salvar):
    """Salva os dados na Planilha Google de forma segura e com tratamento de erro expl√≠cito."""
    try:
        creds = dict(st.secrets["gcp_service_account"])
        creds["private_key"] = creds["private_key"].replace("\\n", "\n")
        gc = gspread.service_account_from_dict(creds)
        spreadsheet = gc.open(NOME_DA_PLANILHA)
        worksheet = spreadsheet.sheet1
        
        if not worksheet.get_all_values():
            cabecalho = ["Timestamp"] + list(dados_para_salvar.keys())
            worksheet.update('A1', [cabecalho])
            
        nova_linha = [datetime.now().strftime("%Y-%m-%d %H:%M:%S")] + [str(v) if v is not None else "" for v in dados_para_salvar.values()]
        
        response = worksheet.append_row(nova_linha)
        
        if isinstance(response, dict) and "updates" in response:
             return True
        else:
             raise TypeError(f"A resposta da API do Google n√£o foi a esperada. Resposta recebida: {response}")

    except gspread.exceptions.SpreadsheetNotFound:
        st.error(f"Erro Cr√≠tico: A planilha '{NOME_DA_PLANILHA}' n√£o foi encontrada. Verifique o nome e as permiss√µes de partilha.")
        return False
    except Exception as e:
        st.error(f"Ocorreu um erro inesperado ao salvar na planilha: {e}")
        st.error(f"Tipo do Erro: {type(e)}")
        return False

# --- ESTRUTURA DE DADOS DO QUESTION√ÅRIO (VALIDADA) ---
escala = {1: "Nunca", 2: "Raramente", 3: "√Äs vezes", 4: "Frequentemente", 5: "Sempre"}
opcoes_escala = list(escala.values())

dimensoes_agrupadas = {
    "üß† Exig√™ncias no Trabalho": {
        "Ritmo de Trabalho": {"Q1": "Voc√™ tem que trabalhar muito r√°pido?", "Q2": "O seu trabalho exige que voc√™ trabalhe em um ritmo acelerado?"},
        "Exig√™ncias Cognitivas": {"Q3": "O seu trabalho exige que voc√™ memorize muitas coisas?", "Q4": "O seu trabalho exige que voc√™ tome decis√µes dif√≠ceis?"},
        "Exig√™ncias Emocionais": {"Q5": "O seu trabalho te coloca em situa√ß√µes emocionalmente dif√≠ceis?", "Q6": "Voc√™ precisa lidar com os problemas pessoais de outras pessoas no seu trabalho?"}
    },
    "üõ†Ô∏è Organiza√ß√£o e Conte√∫do do Trabalho": {
        "Influ√™ncia": {"Q7": "Voc√™ tem influ√™ncia sobre as coisas que afetam o seu trabalho?", "Q8": "Voc√™ tem influ√™ncia sobre o seu ritmo de trabalho?"},
        "Possibilidades de Desenvolvimento": {"Q9": "O seu trabalho te d√° a possibilidade de aprender coisas novas?", "Q10": "O seu trabalho te d√° a oportunidade de desenvolver as suas compet√™ncias?"},
        "Sentido do Trabalho": {"Q11": "O seu trabalho √© significativo para voc√™?", "Q12": "Voc√™ sente que o trabalho que voc√™ faz √© importante?"},
        "Comprometimento com o Local de Trabalho": {"Q13": "Voc√™ gosta de falar sobre o seu trabalho com outras pessoas?", "Q14": "Voc√™ se sente orgulhoso(a) de trabalhar nesta organiza√ß√£o?"}
    },
    "üë• Rela√ß√µes Sociais e Lideran√ßa": {
        "Previsibilidade": {"Q15": "Voc√™ recebe com anteced√™ncia as informa√ß√µes sobre decis√µes importantes?", "Q16": "Voc√™ recebe todas as informa√ß√µes necess√°rias para fazer bem o seu trabalho?"},
        "Clareza de Papel": {"Q17": "Voc√™ sabe exatamente o que se espera de voc√™ no trabalho?"},
        "Conflito de Papel": {"Q18": "Voc√™ recebe tarefas com exig√™ncias contradit√≥rias?"},
        "Qualidade da Lideran√ßa": {"Q19": "O seu chefe imediato √© bom em planejar o trabalho?", "Q20": "O seu chefe imediato √© bom em resolver conflitos?"},
        "Apoio Social do Superior": {"Q21": "Voc√™ consegue ajuda e apoio do seu chefe imediato, se necess√°rio?"},
        "Apoio Social dos Colegas": {"Q22": "Voc√™ consegue ajuda e apoio dos seus colegas, se necess√°rio?"},
        "Sentido de Comunidade": {"Q23": "Existe um bom ambiente de trabalho entre voc√™ e seus colegas?"}
    },
    "üè¢ Interface Trabalho-Indiv√≠duo e Sa√∫de": {
        "Inseguran√ßa no Emprego": {"Q24": "Voc√™ est√° preocupado(a) em perder o seu emprego?"},
        "Conflito Trabalho-Fam√≠lia": {"Q25": "As exig√™ncias do seu trabalho interferem na sua vida familiar e dom√©stica?"},
        "Satisfa√ß√£o no Trabalho": {"Q26": "De um modo geral, o qu√£o satisfeito(a) voc√™ est√° com o seu trabalho?"},
        "Sa√∫de em Geral": {"Q27": "Em geral, como voc√™ diria que √© a sua sa√∫de?"},
        "Burnout": {"Q28": "Com que frequ√™ncia voc√™ se sente f√≠sica e emocionalmente esgotado(a)?"},
        "Estresse": {"Q29": "Com que frequ√™ncia voc√™ se sente tenso(a) ou estressado(a)?"},
        "Problemas de Sono": {"Q30": "Com que frequ√™ncia voc√™ dorme mal e acorda cansado(a)?"},
        "Sintomas Depressivos": {"Q31": "Com que frequ√™ncia voc√™ se sente triste ou deprimido(a)?"}
    },
    "üö´ Comportamentos Ofensivos": {
        "Ass√©dio Moral": {"Q32": "Voc√™ j√° foi submetido(a) a ass√©dio moral (bullying) no seu trabalho nos √∫ltimos 12 meses?"}
    }
}

# Cria uma lista √∫nica com todas as chaves das perguntas (ex: Q1, Q2...)
todas_as_chaves = [q_key for theme in dimensoes_agrupadas.values() for dimension in theme.values() for q_key in dimension.keys()]
total_perguntas = len(todas_as_chaves)

# --- INICIALIZA√á√ÉO DO ESTADO DA SESS√ÉO ---
# Garante que cada chave de pergunta exista no estado da sess√£o
for key in todas_as_chaves:
    if key not in st.session_state:
        st.session_state[key] = None

# --- INTERFACE PRINCIPAL ---
st.title("üß† COPSOQ II ‚Äì Vers√£o Curta (Validada para o Brasil)")

# --- INSTRU√á√ïES APRIMORADAS ---
with st.expander("Clique aqui para ver as instru√ß√µes completas", expanded=True):
    st.markdown("""
    **Prezado(a) Colaborador(a),**

    Bem-vindo(a)! A sua participa√ß√£o √© um passo fundamental para construirmos, juntos, um ambiente de trabalho mais saud√°vel.

    - **Confidencialidade:** As suas respostas s√£o **100% confidenciais e an√≥nimas**. Os resultados s√£o sempre analisados de forma agrupada.
    - **Sinceridade:** Por favor, responda com base nas suas experi√™ncias de trabalho das **√∫ltimas 4 semanas**. N√£o h√° respostas "certas" ou "erradas".
    - **Como Navegar:** A pesquisa est√° dividida em **5 se√ß√µes (abas)**, como pode ver abaixo. Por favor, navegue por todas elas para responder √†s perguntas.
    - **Finaliza√ß√£o:** O bot√£o para enviar as suas respostas s√≥ aparecer√° quando a barra de progresso atingir 100%.
    
    A sua contribui√ß√£o √© extremamente valiosa. Muito obrigado!
    """)
st.divider()

# --- BARRA DE PROGRESSO ---
perguntas_respondidas = len([key for key in todas_as_chaves if st.session_state[key] is not None])
progresso = perguntas_respondidas / total_perguntas if total_perguntas > 0 else 0
st.progress(progresso, text=f"Progresso: {perguntas_respondidas} de {total_perguntas} perguntas respondidas ({progresso:.0%})")
st.markdown("---")

# --- NAVEGA√á√ÉO POR ABAS ---
lista_de_abas = list(dimensoes_agrupadas.keys())
tabs = st.tabs(lista_de_abas)

for i, (nome_tema, dimensoes) in enumerate(dimensoes_agrupadas.items()):
    with tabs[i]:
        for titulo_dimensao, perguntas in dimensoes.items():
            st.subheader(titulo_dimensao)
            for q_key, q_text in perguntas.items():
                # O widget radio agora l√™ e escreve diretamente em st.session_state[q_key]
                st.radio(label=q_text, options=opcoes_escala, key=q_key, horizontal=True)
            st.markdown("---")

# --- L√ìGICA DE FINALIZA√á√ÉO E ENVIO ---
# A verifica√ß√£o do progresso √© feita aqui, no final do script, ap√≥s todos os widgets terem sido processados.
if progresso == 1.0:
    st.success("üéâ **Excelente! Voc√™ respondeu a todas as perguntas.**")
    if st.button("Enviar Respostas", type="primary", use_container_width=True):
        with st.spinner('Calculando e enviando...'):
            # Cria o dicion√°rio de respostas a partir do estado da sess√£o
            respostas_para_salvar = {key: st.session_state[key] for key in todas_as_chaves}
            
            resultados_dimensoes = motor.calcular_dimensoes(respostas_para_salvar)
            dados_completos = {**respostas_para_salvar, **resultados_dimensoes}
            
            if salvar_dados(dados_completos):
                # Limpa o estado da sess√£o para o pr√≥ximo utilizador
                for key in todas_as_chaves:
                    del st.session_state[key]
                st.balloons()
                st.success("‚úÖ Respostas enviadas com sucesso. Muito obrigado!")
                st.rerun()
else:
    st.warning("Por favor, navegue por todas as abas e responda √†s perguntas restantes.")

